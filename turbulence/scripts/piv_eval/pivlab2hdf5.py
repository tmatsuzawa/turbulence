"""
Make a hdf5 file out of PIVLab txt outputs
"""


import argparse
import glob
import os
import numpy as np
import library.tools.rw_data as rw


def pivlab2hdf5(dirbase):
    parentdir = os.path.dirname(dirbase)
    # glob directories generated by a pivlab code
    datadirs = glob.glob(dirbase + '/*')
    for datadir in datadirs:
        print 'Processing %s' % datadir

        datafiles = glob.glob(datadir + '/*.txt')
        for i, datafile in enumerate(datafiles):
            if i % 100 == 0:
                print '%d / %d' % (i, len(datafiles))
            data = np.loadtxt(datafile, delimiter=',', skiprows=3)

            xx, yy = data[:, 0], data[:, 1]
            ux, uy = data[:, 2], data[:, 3]
            omega = data[:, 4]

            if i == 0:
                delta_y = np.diff(yy)[0]
                delta_x = delta_y

                ncols = int((np.max(xx) - np.min(xx)) / delta_x) + 1
                nrows = int((np.max(yy) - np.min(yy)) / delta_y) + 1
                shape_temp = (ncols, nrows)

                xgrid, ygrid = xx.reshape(shape_temp).T, yy.reshape(shape_temp).T

            ux_grid, uy_grid, omega_grid = ux.reshape(shape_temp).T, uy.reshape(shape_temp).T, omega.reshape(
                shape_temp).T

            if i == 0:
                uxdata = np.zeros((nrows, ncols, len(datafiles)))
                uydata = np.zeros((nrows, ncols, len(datafiles)))
                omegadata = np.zeros((nrows, ncols, len(datafiles)))
            uxdata[..., i] = ux_grid
            uydata[..., i] = uy_grid
            omegadata[..., i] = omega_grid

        savedata = {}
        savedata['x'] = xgrid
        savedata['y'] = ygrid
        savedata['ux'] = uxdata
        savedata['uy'] = uydata
        savedata['omega'] = omegadata

        hdf5path = parentdir + '/hdf5data/' + os.path.split(datadir)[1]
        rw.write_hdf5_dict(hdf5path, savedata)

    print '... Done'



def main(args):
    if args.pdirbase is None:
        pivlab2hdf5(args.dirbase)
    else:
        dirbases = glob.glob(args.pdirbase + '/*')
        for dirbase in dirbases:
            pivlab2hdf5(dirbase)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Make a hdf5 file out of PIVLab txt outputs')
    parser.add_argument('-dirbase', '--dirbase', help='Parent directory of PIVlab output directories', type=str,
                        default='/Volumes/labshared3-1/takumi/JHTD-sample/JHT_Database/Data/synthetic_data_from_jhtd/varying_particle_density/PIV_W16_step1_data')
    parser.add_argument('-pdirbase', '--pdirbase', help='Parent directory of dirbase. Use this if you have multiple directories that contains pivlab outputs', type=str,
                        default=None)
    args = parser.parse_args()

    main(args)